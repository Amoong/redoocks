[{"C:\\Coding\\NomadCoder\\redoocks\\src\\App.tsx":"1","C:\\Coding\\NomadCoder\\redoocks\\src\\Header.tsx":"2","C:\\Coding\\NomadCoder\\redoocks\\src\\Screen.tsx":"3","C:\\Coding\\NomadCoder\\redoocks\\src\\context.tsx":"4"},{"size":147,"mtime":1611228919731,"results":"5","hashOfConfig":"6"},{"size":325,"mtime":1611234304869,"results":"7","hashOfConfig":"6"},{"size":348,"mtime":1611234652636,"results":"8","hashOfConfig":"6"},{"size":917,"mtime":1611234599351,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wxc4rq",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Coding\\NomadCoder\\redoocks\\src\\App.tsx",[],"C:\\Coding\\NomadCoder\\redoocks\\src\\Header.tsx",[],"C:\\Coding\\NomadCoder\\redoocks\\src\\Screen.tsx",["19"],"C:\\Coding\\NomadCoder\\redoocks\\src\\context.tsx",["20"],"import React, { useState, useContext } from \"react\";\r\nimport { runInNewContext } from \"vm\";\r\n\r\nconst defaultValue = {\r\n  user: { name: \"\", loggedIn: false },\r\n  fn: {\r\n    logUserIn: () => {},\r\n  },\r\n};\r\n\r\nconst UserContext = React.createContext(defaultValue);\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst UserContextProvider: React.FunctionComponent<IProps> = ({ children }) => {\r\n  const [user, setUser] = useState({\r\n    name: \"Mu\",\r\n    loggedIn: false,\r\n  });\r\n  const logUserIn = () => setUser({ ...user, loggedIn: true });\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, fn: { logUserIn } }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const { user } = useContext(UserContext);\r\n  return user;\r\n};\r\n\r\nexport const useFns = () => {\r\n  const { fn } = useContext(UserContext);\r\n  return fn;\r\n};\r\n\r\nexport default UserContextProvider;\r\n",{"ruleId":"21","severity":1,"message":"22","line":1,"column":17,"nodeType":"23","messageId":"24","endLine":1,"endColumn":27},{"ruleId":"21","severity":1,"message":"25","line":2,"column":10,"nodeType":"23","messageId":"24","endLine":2,"endColumn":25},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'runInNewContext' is defined but never used."]